name: Building and Deploying MKDOCS to webdav

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-mermaid2-plugin

      - name: Build MkDocs site
        run: mkdocs build -d site
        working-directory: .

      - name: Install curl for webdav
        run: sudo apt-get install -y curl

      - name: Clean WebDAV directory
        env:
          WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        run: |
          files=$(echo "$response" | grep -oE '<[^>]*:href>[^<]*</[^>]*:href>' | sed -e 's/<[^>]*:href>//' -e 's/<\/[^>]*:href>//' | grep -v '^/$' | grep -v "^${WEBDAV_URL}/$")
          echo "$files" | while read -r file; do
            echo "Deleting $file"
              delete_response=$(curl -s -o /dev/null -w "%{http_code}" -u "$WEBDAV_USERNAME:$WEBDAV_PASSWORD" -X DELETE "$file")
              if [[ "$delete_response" -eq 204 || "$delete_response" -eq 200 ]]; then
                echo "Deleted: $file"
              else
                echo "Failed to Delete $file with $delete_response"
                exit 1
              fi
            done


      - name: Deploy to WebDAV
        env:
          WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        run: |
          find site -type f | while read file; do
            remote_file="${{ secrets.WEBDAV_URL }}/$(echo $file | sed 's|site/||')"
            curl -u "$WEBDAV_USERNAME:$WEBDAV_PASSWORD" -T "$file" "$remote_file"
          done
